'use client'

import { useState } from 'react'
import { motion } from 'framer-motion'
import Image from 'next/image'

interface PinterestPin {
  id: string
  imageUrl: string
  title: string
  description: string
}

interface PinterestReferencesProps {
  onSelect: (pins: PinterestPin[]) => void
  industry?: string
  style?: string
}

// –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API)
const mockPins: PinterestPin[] = [
  {
    id: '1',
    imageUrl: 'https://picsum.photos/400/300?random=1',
    title: '–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –¥–∏–∑–∞–π–Ω',
    description: '–ß–∏—Å—Ç—ã–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å'
  },
  {
    id: '2',
    imageUrl: 'https://picsum.photos/400/300?random=2',
    title: '–Ø—Ä–∫–∏–π –≥—Ä–∞–¥–∏–µ–Ω—Ç',
    description: '–°–º–µ–ª—ã–µ —Ü–≤–µ—Ç–∞ –∏ —Ñ–æ—Ä–º—ã'
  },
  {
    id: '3',
    imageUrl: 'https://picsum.photos/400/300?random=3',
    title: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Å—Ç–∏–ª—å',
    description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤–∏–¥'
  },
  {
    id: '4',
    imageUrl: 'https://picsum.photos/400/300?random=4',
    title: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω—ã–π –¥–∏–∑–∞–π–Ω',
    description: '–§—É—Ç—É—Ä–∏—Å—Ç–∏—á–Ω—ã–π –ø–æ–¥—Ö–æ–¥'
  },
  {
    id: '5',
    imageUrl: 'https://picsum.photos/400/300?random=5',
    title: '–û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å',
    description: '–ü—Ä–∏—Ä–æ–¥–Ω—ã–µ —Ñ–æ—Ä–º—ã'
  },
  {
    id: '6',
    imageUrl: 'https://picsum.photos/400/300?random=6',
    title: '–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –¥–∏–∑–∞–π–Ω',
    description: '–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π –≤–∏–¥'
  }
]

export function PinterestReferences({ onSelect, industry, style }: PinterestReferencesProps) {
  const [selectedPins, setSelectedPins] = useState<string[]>([])
  const [searchQuery, setSearchQuery] = useState('')
  const [isSearching, setIsSearching] = useState(false)

  const togglePin = (pinId: string) => {
    if (selectedPins.includes(pinId)) {
      setSelectedPins(selectedPins.filter(id => id !== pinId))
    } else if (selectedPins.length < 3) {
      setSelectedPins([...selectedPins, pinId])
    }
  }

  const handleSearch = async () => {
    setIsSearching(true)
    // TODO: –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π Pinterest API
    setTimeout(() => {
      setIsSearching(false)
    }, 1000)
  }

  const handleContinue = () => {
    const selected = mockPins.filter(pin => selectedPins.includes(pin.id))
    onSelect(selected)
  }

  return (
    <div className="w-full">
      <div className="mb-8">
        <h3 className="text-2xl font-bold text-gray-900 mb-2">
          üìå –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—ã –∏–∑ Pinterest
        </h3>
        <p className="text-gray-600">
          –í—ã–±–µ—Ä–∏—Ç–µ –¥–æ 3 –¥–∏–∑–∞–π–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –Ω—Ä–∞–≤—è—Ç—Å—è. AI —É—á—Ç–µ—Ç –∏—Ö –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤–∞—à–µ–≥–æ —Ä–µ–¥–∏–∑–∞–π–Ω–∞.
        </p>
      </div>

      {/* –ü–æ–∏—Å–∫ */}
      <div className="mb-6">
        <div className="flex gap-2">
          <input
            type="text"
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            placeholder={`–ù–∞–ø—Ä–∏–º–µ—Ä: ${industry || 'modern'} website design`}
            className="flex-1 px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
          />
          <button
            onClick={handleSearch}
            disabled={isSearching}
            className="px-6 py-3 bg-red-600 hover:bg-red-700 text-white font-medium rounded-lg transition duration-200 disabled:opacity-50"
          >
            {isSearching ? '–ò—â–µ–º...' : '–ò—Å–∫–∞—Ç—å –≤ Pinterest'}
          </button>
        </div>
      </div>

      {/* –°–µ—Ç–∫–∞ –ø–∏–Ω–æ–≤ */}
      <div className="grid grid-cols-2 md:grid-cols-3 gap-4 mb-8">
        {mockPins.map((pin, index) => (
          <motion.div
            key={pin.id}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: index * 0.1 }}
            onClick={() => togglePin(pin.id)}
            className={`relative cursor-pointer rounded-lg overflow-hidden transition-all ${
              selectedPins.includes(pin.id)
                ? 'ring-4 ring-red-500 transform scale-105'
                : 'hover:transform hover:scale-105'
            }`}
          >
            <div className="relative aspect-[4/3] bg-gray-100">
              <Image
                src={pin.imageUrl}
                alt={pin.title}
                fill
                className="object-cover"
              />
              {selectedPins.includes(pin.id) && (
                <div className="absolute inset-0 bg-red-500 bg-opacity-20 flex items-center justify-center">
                  <div className="bg-white rounded-full p-2">
                    <svg className="w-6 h-6 text-red-500" fill="currentColor" viewBox="0 0 20 20">
                      <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                    </svg>
                  </div>
                </div>
              )}
            </div>
            <div className="p-3 bg-white">
              <h4 className="font-medium text-gray-900 text-sm">{pin.title}</h4>
              <p className="text-xs text-gray-600 mt-1">{pin.description}</p>
            </div>
          </motion.div>
        ))}
      </div>

      {/* –ê–≤—Ç–æ–ø–æ–¥–±–æ—Ä */}
      <div className="mb-6 p-4 bg-red-50 rounded-lg">
        <p className="text-sm text-gray-700">
          <span className="font-medium">üí° –°–æ–≤–µ—Ç:</span> AI –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–æ–±—Ä–∞–ª —ç—Ç–∏ –ø–∏–Ω—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞.
          –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è –∏–ª–∏ –Ω–∞–π—Ç–∏ –¥—Ä—É–≥–∏–µ —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫.
        </p>
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
      <div className="flex gap-4">
        <button
          onClick={() => setSelectedPins([])}
          className="px-6 py-3 border border-gray-300 text-gray-700 font-medium rounded-lg hover:bg-gray-50 transition duration-200"
        >
          –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—ã
        </button>
        <button
          onClick={handleContinue}
          disabled={selectedPins.length === 0}
          className={`flex-1 px-6 py-3 font-medium rounded-lg transition duration-200 ${
            selectedPins.length > 0
              ? 'bg-blue-600 hover:bg-blue-700 text-white'
              : 'bg-gray-200 text-gray-400 cursor-not-allowed'
          }`}
        >
          {selectedPins.length === 0
            ? '–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–µ—Ñ–µ—Ä–µ–Ω—Å'
            : `–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å ${selectedPins.length} —Ä–µ—Ñ–µ—Ä–µ–Ω—Å${selectedPins.length === 1 ? '–æ–º' : '–∞–º–∏'}`
          }
        </button>
      </div>
    </div>
  )
}